{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "WFC-GPU Shader Feature Capability Flags",
  "description": "Defines the structure for hardware/backend feature capability flags used by shader components.",
  "type": "object",
  "properties": {
    "name": {
      "description": "Unique identifier for the feature capability.",
      "type": "string",
      "pattern": "^[a-zA-Z0-9_]+$"
    },
    "description": {
      "description": "Description of the feature and what functionality it enables.",
      "type": "string"
    },
    "detection_method": {
      "description": "How the feature is detected in hardware or the backend.",
      "type": "string",
      "enum": ["adapter_feature", "limits", "manual_check", "always_available", "never_available"]
    },
    "adapter_feature": {
      "description": "Name of the wgpu adapter feature to check (if detection_method is 'adapter_feature').",
      "type": "string"
    },
    "limit_check": {
      "description": "Expression to check against device limits (if detection_method is 'limits').",
      "type": "object",
      "properties": {
        "limit_name": {
          "description": "Name of the limit to check.",
          "type": "string"
        },
        "comparison": {
          "description": "Comparison operation.",
          "type": "string",
          "enum": ["greater_than", "greater_than_or_equal", "less_than", "less_than_or_equal", "equal", "not_equal"]
        },
        "value": {
          "description": "Value to compare against the limit.",
          "type": "number"
        }
      },
      "required": ["limit_name", "comparison", "value"],
      "additionalProperties": false
    },
    "fallback_feature": {
      "description": "Name of the feature to use as fallback if this feature is not available.",
      "type": "string",
      "pattern": "^[a-zA-Z0-9_]+$"
    },
    "components": {
      "description": "List of components that provide implementations for this feature.",
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_]+$"
      },
      "default": []
    },
    "dependencies": {
      "description": "List of other features this feature depends on.",
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_]+$"
      },
      "default": []
    },
    "incompatible_with": {
      "description": "List of features this feature is incompatible with.",
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_]+$"
      },
      "default": []
    },
    "performance_impact": {
      "description": "Estimated performance impact when enabling this feature.",
      "type": "string",
      "enum": ["high_improvement", "medium_improvement", "low_improvement", "neutral", "low_degradation", "medium_degradation", "high_degradation"]
    },
    "tags": {
      "description": "Optional tags for categorization or filtering.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": []
    }
  },
  "required": [
    "name",
    "detection_method",
    "description"
  ],
  "allOf": [
    {
      "if": {
        "properties": { "detection_method": { "enum": ["adapter_feature"] } }
      },
      "then": {
        "required": ["adapter_feature"]
      }
    },
    {
      "if": {
        "properties": { "detection_method": { "enum": ["limits"] } }
      },
      "then": {
        "required": ["limit_check"]
      }
    }
  ],
  "additionalProperties": false
} 